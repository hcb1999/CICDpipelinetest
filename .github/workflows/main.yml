name: CI/CD Pipeline

on:
  pull_request:
    branches:
      - master  # master 브랜치 푸시 시 프로덕션 배포
      - develop # develop 브랜치 푸시 시 스테이징 배포

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 리포지토리 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          persist-credentials: false  # GitHub 기본 인증 제거 (PAT 사용 예정)

      # 2️⃣ Node.js 환경 설정
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      # 3️⃣ 의존성 설치
      - name: Install dependencies
        run: npm install

      # 4️⃣ 빌드 실행
      - name: Build project
        run: npm run build

      # 5️⃣ 서버 호스트 키 추가 (호스트 키 검증 오류 방지)
      - name: Add SSH host key
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H www-test.naegift.com >> ~/.ssh/known_hosts

      # 6️⃣ 프로덕션 서버 배포 (master 브랜치)
      - name: Deploy to production
        if: github.ref == 'refs/heads/master'
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY_AZURE_GIVU_TEST }}" > naegift-test_key.pem
          chmod 600 naegift-test_key.pem
          scp -o StrictHostKeyChecking=no -r -i naegift-test_key.pem ./build/* naegift@www-test.naegift.com:/var/www/html
          ssh -o StrictHostKeyChecking=no -i naegift-test_key.pem naegift@www-test.naegift.com "sudo systemctl restart nginx"

      # 7️⃣ 스테이징 서버 배포 (develop 브랜치)
      - name: Deploy to staging
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY_AZURE_GIVU_DEV }}" > naegift-dev2_key.pem
          chmod 600 naegift-dev2_key.pem
          scp -o StrictHostKeyChecking=no -r -i naegift-dev2_key.pem ./build/* naegift@www-dev.naegift.com:/var/www/html
          ssh -o StrictHostKeyChecking=no -i naegift-dev2_key.pem naegift@www-dev.naegift.com "sudo systemctl restart nginx"

      # 8️⃣ GitHub 인증 설정 (PAT 토큰 사용)
      - name: Set up Git credentials
        run: |
          git config --global user.email "hcb1999@naver.com"
          git config --global user.name "hcb1999"
          git remote set-url origin https://hcb1999:${{ secrets.GH_TOKEN }}@github.com/hcb1999/CICDpipelinetest.git

      # 9️⃣ 자동 태깅 (master 브랜치)
      - name: Auto Increment Version and Tag for Production
        if: github.ref == 'refs/heads/master'
        run: |
          git fetch --tags
          LATEST_TAG=$(git tag --sort=-v:refname | grep -E '^v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)

          if [[ "$LATEST_TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            MAJOR=$(echo $LATEST_TAG | cut -d. -f1 | sed 's/v//')
            MINOR=$(echo $LATEST_TAG | cut -d. -f2)
            PATCH=$(echo $LATEST_TAG | cut -d. -f3)
            NEW_TAG="v$MAJOR.$MINOR.$((PATCH + 1))"
          else
            NEW_TAG="v1.0.0"
          fi

          echo "New Production Tag: $NEW_TAG"
          git tag -a "$NEW_TAG" -m "Release $NEW_TAG"
          git push origin "$NEW_TAG"